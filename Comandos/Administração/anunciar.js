const { TextInputStyle } = require('discord.js')
const { InteractionType } = require('discord.js')
const Discord = require('discord.js')

module.exports = {
    name: 'anunciar',
    description: 'Anuncie a partir de um modal',
    type: Discord.ApplicationCommandType.ChatInput,
    options: [
        {
            name: "chat",
            description: "Mencione um canal.",
            type: Discord.ApplicationCommandOptionType.Channel,
            required: true,
        },
    ],
    run: async (client, interaction) => {

        if (!interaction.member.permissions.has(Discord.PermissionFlagsBits.ManageMessages))
            return interaction.reply({
                content: `**‚ùå | ${interaction.user}, Voc√™ precisa da permiss√£o \`Gerenciar Mensagens\` para usar este comando!**`,
                ephemeral: true,
            })

        const modal = new Discord.ModalBuilder()
            .setCustomId('MyFirstModal')
            .setTitle('Criar An√∫ncio üì¢')

        const T√≠tuloEmbed = new Discord.TextInputBuilder()
            .setCustomId('T√≠tuloEmbed')
            .setLabel('T√≠tulo do An√∫ncio') //Titulo do campo
            .setPlaceholder(`Insira o t√≠tulo do an√∫ncio.`) //placeholder do campo
            .setStyle(TextInputStyle.Short)

        const Descri√ß√£o = new Discord.TextInputBuilder()
            .setCustomId('Descri√ß√£o')
            .setLabel('Descri√ß√£o do An√∫ncio') //Titulo do campo
            .setPlaceholder(`Insira a descri√ß√£o do an√∫ncio`) //placeholder do campo
            .setStyle(TextInputStyle.Paragraph)

        const Cor = new Discord.TextInputBuilder()
            .setCustomId('Cor')
            .setLabel('Cor do An√∫ncio') //Titulo do campo
            .setPlaceholder(`Insira o HEX de uma cor..`) //placeholder do campo
            .setStyle(TextInputStyle.Short)

        const Imagem = new Discord.TextInputBuilder()
            .setCustomId('Imagem')
            .setLabel('Insira uma imagem') //Titulo do campo
            .setPlaceholder(`Insira o link de uma imagem..`) //placeholder do campo
            .setStyle(TextInputStyle.Short)


        const PrimeiraActionRow = new Discord.ActionRowBuilder().addComponents(T√≠tuloEmbed);
        const SegundaActionRow = new Discord.ActionRowBuilder().addComponents(Descri√ß√£o);
        const TerceiraActionRow = new Discord.ActionRowBuilder().addComponents(Cor);
        const QuartaActionRow = new Discord.ActionRowBuilder().addComponents(Imagem);

        let chat = interaction.options.getChannel("chat")

        modal.addComponents(PrimeiraActionRow, SegundaActionRow, TerceiraActionRow, QuartaActionRow)

        await interaction.showModal(modal);

        client.once('interactionCreate', async interaction => {
            if (!interaction.isModalSubmit()) return;

            if (interaction.customId === 'MyFirstModal') {

                const Descri√ß√£oEmbed = interaction.fields.getTextInputValue('Descri√ß√£o');
                const T√≠tuloEmbed = interaction.fields.getTextInputValue('T√≠tuloEmbed');
                const Cor = interaction.fields.getTextInputValue('Cor');
                const Imagem = interaction.fields.getTextInputValue('Imagem');

                let embedModal1 = new Discord.EmbedBuilder()
                    .setColor(`${Cor}`)
                    .setTitle(`${T√≠tuloEmbed}`)
                    .setDescription(`${Descri√ß√£oEmbed}
                    <@&1032273928464388178>`) //Cargo de anuncios
                    .setImage(`${Imagem}`)

                interaction.reply({
                    content: `**‚úÖ An√∫ncio realizado com sucesso.**`, ephemeral: true
                })


                chat.send({
                    embeds: [embedModal1]
                }).catch((e) => {
                    interaction.reply({ content: `Algo deu errado, por favor tente novamente...`, ephemeral: true })
                })

            }

        });


    }
}